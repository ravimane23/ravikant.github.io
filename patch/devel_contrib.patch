diff --git a/devel_contrib.pages.inc b/devel_contrib.pages.inc
index 0c3d438..f6997ca 100644
--- a/devel_contrib.pages.inc
+++ b/devel_contrib.pages.inc
@@ -1,6 +1,8 @@
 <?php
+
 /**
- * @file devel_contrib.pages.inc
+ * @file
+ * Devel_contrib.pages.inc
  * Contains page callbacks.
  */
 
@@ -8,9 +10,9 @@
  * Helper for outputting data from info functions.
  *
  * @param $info_hooks
- *  An array whose keys are the names of info functions to call, and whose
- *  values are labels to show with the data from each function.
- *  For example: entity_get_info => 'Entity info'.
+ *   An array whose keys are the names of info functions to call, and whose
+ *   values are labels to show with the data from each function.
+ *   For example: entity_get_info => 'Entity info'.
  */
 function devel_contrib_info_page($info_hooks) {
   $output = '';
@@ -38,11 +40,11 @@ function devel_contrib_field_info_page($entity_type, $bundle) {
 function devel_contrib_block_page($module = NULL, $delta = NULL) {
   if (is_null($module)) {
     // Return a list of all blocks, with links to see each block rendered.
-    $build = array();
-    $build['modules'] = array(
+    $build = [];
+    $build['modules'] = [
       '#theme' => 'item_list',
-      '#items' => array(),
-    );
+      '#items' => [],
+    ];
 
     foreach (module_implements('block_info') as $module) {
       $build['modules']['#items'][$module]['data'] = $module;
@@ -65,7 +67,6 @@ function devel_contrib_block_page($module = NULL, $delta = NULL) {
   $block = module_invoke($module, 'block_view', $delta);
 
   // TODO: invoke alter hook.
-
   // Block subject may be empty.
   if (!isset($block['subject'])) {
     $block['subject'] = '';
@@ -85,7 +86,7 @@ function devel_contrib_permissions_info_page() {
   $roles = user_roles();
   $output .= kprint_r($roles, TRUE, t('Roles'));
 
-  $modules = array();
+  $modules = [];
   foreach (module_implements('permission') as $module) {
     $modules[] = $module;
   }
@@ -109,18 +110,18 @@ function devel_contrib_permissions_info_page() {
  * Page callback for language and translation info.
  */
 function devel_contrib_language_info_page() {
-  $info = array(
+  $info = [
     'language_types_info' => t('Language types'),
     'language_negotiation_info' => t('Language negotiation'),
-  );
+  ];
   if (module_exists('i18n')) {
-    $info += array(
+    $info += [
       'i18n_object_info' => t('i18n object types'),
-    );
+    ];
 
-    $info += array(
+    $info += [
       'i18n_string_group_info' => t('i18n string types'),
-    );
+    ];
   }
 
   return devel_contrib_info_page($info);
@@ -145,9 +146,9 @@ function devel_contrib_hook_info_page() {
  * Page callback for devel menu item: Token.
  */
 function devel_contrib_token_info_page() {
-  $output = theme('token_tree', array(
+  $output = theme('token_tree', [
     'token_types' => 'all',
-  ));
+  ]);
 
   return $output;
 }
@@ -177,7 +178,7 @@ function devel_contrib_ctools_info_page() {
   $plugin_types_info = ctools_plugin_get_plugin_type_info();
   $output = kprint_r($plugin_types_info, TRUE, t('CTools plugin types'));
 
-  $plugins = array();
+  $plugins = [];
   foreach ($plugin_types_info as $module => $module_info) {
     foreach ($module_info as $type => $plugin_info) {
       $plugins[$module][$type] = ctools_get_plugins($module, $type);
@@ -208,7 +209,7 @@ function devel_contrib_views_info_page() {
  * Devel tab on a single View.
  *
  * @param $view
- *  The View object.
+ *   The View object.
  */
 function devel_contrib_views_devel_page($view) {
   $output = kprint_r($view, TRUE);
@@ -231,13 +232,13 @@ function devel_contrib_entity_info_page() {
  */
 function devel_contrib_rules_info_page() {
   $output = '';
-  foreach(array('data_info', 'plugin_info', 'event_info') as $hook) {
+  foreach (['data_info', 'plugin_info', 'event_info'] as $hook) {
     $info = rules_fetch_data($hook);
     ksort($info);
 
-    $output .= kprint_r($info, TRUE, t('Rules !hook data', array(
+    $output .= kprint_r($info, TRUE, t('Rules !hook data', [
       '!hook' => $hook,
-    )));
+    ]));
   }
   return $output;
 }
@@ -273,7 +274,7 @@ function devel_contrib_features_page() {
   $components = features_get_components();
   $output = kprint_r($components, TRUE, t('Features components'));
 
-  $exports = array();
+  $exports = [];
   foreach ($components as $component => $component_info) {
     if ($options = features_invoke($component, 'features_export_options')) {
       foreach ($options as $name => $title) {
@@ -294,15 +295,15 @@ function devel_contrib_variable_page() {
   $output = '';
 
   variable_include();
-  $info = variable_build_info('variable', array());
+  $info = variable_build_info('variable', []);
   ksort($info);
   $output .= kprint_r($info, TRUE, t('Defined variables'));
 
-  $info = variable_build_info('group', array());
+  $info = variable_build_info('group', []);
   ksort($info);
   $output .= kprint_r($info, TRUE, t('Variable groups'));
 
-  $info = variable_build_info('type', array());
+  $info = variable_build_info('type', []);
   ksort($info);
   $output .= kprint_r($info, TRUE, t('Variable types'));
 
@@ -354,7 +355,7 @@ function devel_contrib_og_page() {
 function devel_contrib_commerce_order_states_info_page() {
   $states = commerce_order_states();
   foreach ($states as $name => $state) {
-    $states[$name]['statues'] = commerce_order_statuses(array('state' => $name));
+    $states[$name]['statues'] = commerce_order_statuses(['state' => $name]);
   }
 
   $output = kprint_r($states, TRUE, t('Commerce order states and statuses'));
@@ -393,12 +394,12 @@ function devel_contrib_flag_info_page() {
  * Page callback for devel menu item.
  */
 function devel_contrib_menu_block_info_page() {
-  $deltas = variable_get('menu_block_ids', array());
+  $deltas = variable_get('menu_block_ids', []);
   foreach (array_keys(module_invoke_all('menu_block_blocks')) as $delta) {
     $deltas[] = $delta;
   }
 
-  $info = array();
+  $info = [];
   foreach ($deltas as $delta) {
     $info[$delta] = menu_block_get_config($delta);
   }
@@ -409,7 +410,7 @@ function devel_contrib_menu_block_info_page() {
 }
 
 /**
- * Page callback for devel menu item: Services
+ * Page callback for devel menu item: Services.
  */
 function devel_contrib_services_info_page() {
   $resources = services_get_resources();
@@ -469,7 +470,7 @@ function devel_contrib_facetapi_info_page() {
 
   foreach ($searchers as $searcher) {
     $info = facetapi_get_facet_info($searcher['name']);
-    $output .= kprint_r($info, TRUE, t('Facets for @searcher', array('@searcher' => $searcher['label'])));
+    $output .= kprint_r($info, TRUE, t('Facets for @searcher', ['@searcher' => $searcher['label']]));
   }
 
   return $output;
@@ -485,7 +486,7 @@ function devel_contrib_remote_entity_info_page() {
   $output .= kprint_r($resources, TRUE, t('Remote entity resources'));
 
   // Build a list of relevant connections.
-  $connections = array();
+  $connections = [];
   foreach ($resources as $resource) {
     $connections[$resource->connection] = $resource->connection;
   }
@@ -493,13 +494,13 @@ function devel_contrib_remote_entity_info_page() {
   // Show the table info for each connection.
   foreach ($connections as $connection) {
     $table_info = remote_entity_get_query_table_info($connection);
-    $output .= kprint_r($table_info, TRUE, t("Remote table info for connection '@connection'", array(
+    $output .= kprint_r($table_info, TRUE, t("Remote table info for connection '@connection'", [
       '@connection' => $connection,
-    )));
+    ]));
   }
 
   // Show the property shadowing for each remote entity.
-  $info = array();
+  $info = [];
   $property_info = entity_get_property_info();
   foreach ($resources as $resource) {
     $entity_type = $resource->component;
@@ -536,13 +537,13 @@ function devel_contrib_module_builder_info_page() {
   catch (ModuleBuilderException $e) {
     if ($e->needs_hooks_download) {
       drupal_set_message(t('No hooks were found. Please check the documentation path specified in the <a href="!settings-url">%administer >> %config >> %develop >> %modulebuilder</a> page.',
-        array(
+        [
           '!settings-url' => url('admin/config/development/module_builder'),
           '%administer' => 'Administer',
           '%config' => 'Site configuration',
           '%develop' => 'Development',
           '%modulebuilder' => "Module builder",
-        )
+        ]
       ), 'warning');
       return '';
     }
diff --git a/src/Controller/ViewsDataController.php b/src/Controller/ViewsDataController.php
index 40d3cec..c77266a 100644
--- a/src/Controller/ViewsDataController.php
+++ b/src/Controller/ViewsDataController.php
@@ -1,10 +1,5 @@
 <?php
 
-/**
- * @file
- * Contains Drupal\devel_contrib\Controller\ViewsDataController.
- */
-
 namespace Drupal\devel_contrib\Controller;
 
 use Drupal\views\Views;
@@ -17,7 +12,7 @@ class ViewsDataController {
   /**
    * Returns the page content.
    */
-  function content() {
+  public function content() {
     $build = [];
 
     $views_data = Views::viewsData();
diff --git a/src/Form/ViewsDataForm.php b/src/Form/ViewsDataForm.php
index c7108c4..2cfb505 100644
--- a/src/Form/ViewsDataForm.php
+++ b/src/Form/ViewsDataForm.php
@@ -4,7 +4,6 @@ namespace Drupal\devel_contrib\Form;
 
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
-use Drupal\views\Views;
 
 /**
  * Show a form for outputting filtered portions of Views data.
@@ -14,10 +13,16 @@ use Drupal\views\Views;
  */
 class ViewsDataForm extends FormBase {
 
+  /**
+   *
+   */
   public function getFormId() {
     return 'devel_views_data_form';
   }
 
+  /**
+   *
+   */
   public function buildForm(array $form, FormStateInterface $form_state) {
     $query_table = \Drupal::request()->query->get('table');
     $query_filter = \Drupal::request()->query->get('filter');
@@ -71,6 +76,9 @@ class ViewsDataForm extends FormBase {
     return $form;
   }
 
+  /**
+   *
+   */
   public function submitForm(array &$form, FormStateInterface $form_state) {
   }
 
diff --git a/src/Plugin/Block/DevelContribLinks.php b/src/Plugin/Block/DevelContribLinks.php
index 26f1212..ae268f9 100644
--- a/src/Plugin/Block/DevelContribLinks.php
+++ b/src/Plugin/Block/DevelContribLinks.php
@@ -3,12 +3,10 @@
 namespace Drupal\devel_contrib\Plugin\Block;
 
 use Drupal\Core\Block\BlockBase;
-use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Menu\LocalActionManagerInterface;
 use Drupal\Core\Menu\LocalTaskManagerInterface;
 use Drupal\Core\Menu\MenuLinkManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
-use Drupal\Core\Session\AccountInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
 /**
