diff --git a/js/extlink_extra.js b/js/extlink_extra.js
index e143c3c..e4f6515 100644
--- a/js/extlink_extra.js
+++ b/js/extlink_extra.js
@@ -14,7 +14,7 @@
             className: 'extlink-extra-leaving-colorbox',
             onComplete: function () { // Note - drupal colorbox module automatically attaches drupal behaviors to loaded content.
                 // Allow our cancel link to close the colorbox.
-                jQuery('div.extlink-extra-back-action a').click(function(e) {jQuery.colorbox.close(); return false;})
+                jQuery('div.extlink-extra-back-action a').click(function (e) {jQuery.colorbox.close(); return false;})
                 extlink_extra_timer();
             },
             onClosed: extlink_stop_timer
@@ -23,7 +23,7 @@
     Drupal.behaviors.extlink_extra = {
         // Function mostly duplicated from extlink.js.
         // Returns an array of DOM elements of all external links.
-        extlinkAttach: function(context) {
+        extlinkAttach: function (context) {
             var settings = drupalSettings;
 
             if (!settings.data.hasOwnProperty('extlink')) {
@@ -82,7 +82,7 @@
             // available in jQuery 1.0 (Drupal 5 default).
             var external_links = new Array();
             var mailto_links = new Array();
-            $("a, area", context).each(function(el) {
+            $("a, area", context).each(function (el) {
                 try {
                     var url = this.href.toLowerCase();
                     if (url.indexOf('http') == 0
@@ -119,7 +119,7 @@
         },
 
         // Our click handler for external links.
-        clickReaction: function(e) {
+        clickReaction: function (e) {
             // Allow the default behavior for link if it's within the warning area.
             // This keeps us from firing an infinite loop of reactions.
             if (isInExtraLeavingContainer(this)) {
@@ -169,7 +169,7 @@
             }
         },
 
-        attach: function(context){
+        attach: function (context) {
             // Build an array of external_links exactly like extlink does.
             var external_links = this.extlinkAttach(context);
 
@@ -209,7 +209,7 @@
                 $(external_links).not('.ext-override, .extlink-extra-leaving a').click(this.clickReaction);
             }
 
-            $(document).ready(function() {
+            $(document).ready(function () {
                 if (drupalSettings.extlink_extra.extlink_url_override == 1) {
                     if (drupalSettings.extlink_extra.extlink_url_params.external_url) {
                         $.cookie("external_url", drupalSettings.extlink_extra.extlink_url_params.external_url, { path: '/' });
@@ -263,7 +263,7 @@
             // have trouble with this.
             if (drupalSettings.extlink_extra.extlink_508_fix == 1) {
                 // Go through each <a> tag with an 'ext' class,
-                $.each($("a.ext"), function(index, value) {
+                $.each($("a.ext"), function (index, value) {
                     // find a <span> next to it with 'ext' class,
                     var nextSpan = $(this).next('span.ext');
                     if (nextSpan.length) {
@@ -322,5 +322,5 @@ function extlink_stop_timer() {
 }
 
 function extlink_update_countdown_markup(container, count) {
-    container.html('<span class="extlink-timer-text">Automatically redirecting in: </span><span class="extlink-count">'+count+'</span><span class="extlink-timer-text"> seconds.</span>');
+    container.html('<span class="extlink-timer-text">Automatically redirecting in: </span><span class="extlink-count">' + count + '</span><span class="extlink-timer-text"> seconds.</span>');
 }
diff --git a/src/Controller/ExtlinkExtraController.php b/src/Controller/ExtlinkExtraController.php
index dd715ef..23f300c 100644
--- a/src/Controller/ExtlinkExtraController.php
+++ b/src/Controller/ExtlinkExtraController.php
@@ -2,7 +2,6 @@
 
 namespace Drupal\extlink_extra\Controller;
 
-use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Render\HtmlResponse;
@@ -11,6 +10,9 @@ use Drupal\Core\Utility\Token;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
 
+/**
+ *
+ */
 class ExtlinkExtraController extends ControllerBase {
 
   /**
@@ -109,4 +111,5 @@ class ExtlinkExtraController extends ControllerBase {
 
     return $output;
   }
+
 }
