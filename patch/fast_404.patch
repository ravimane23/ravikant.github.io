diff --git a/example.settings.fast404.php b/example.settings.fast404.php
index 30d6823..443723f 100644
--- a/example.settings.fast404.php
+++ b/example.settings.fast404.php
@@ -1,7 +1,6 @@
 <?php
 
 // @codingStandardsIgnoreFile
-
 /**
  * @file
  * Fast 404 settings.
@@ -20,7 +19,6 @@
  * NotFoundHttpException exception, Fast 404 can intervene and serve a Fast 404
  * error and exit.
  */
-
 /**
  * Disallowed extensions. Any extension set here will not be served by Drupal
  * and will get a Fast 404. This will not affect actual files on the filesystem
@@ -32,7 +30,6 @@
  * Default value for this setting is shown below.
  */
 # $settings['fast404_exts'] = '/^(?!\/robots)^(?!\/system\/files).*\.(txt|png|gif|jpe?g|css|js|ico|swf|flv|cgi|bat|pl|dll|exe|asp)$/i';
-
 /**
  * Allow anonymous users to hit URLs containing 'styles' even if the file
  * does not exist. TRUE is default behavior. If you know all image style
@@ -41,7 +38,6 @@
  * Default value for this setting is TRUE.
  */
 # $settings['fast404_allow_anon_imagecache'] = FALSE;
-
 /**
  * BE CAREFUL with this setting as some modules use their own php files and you
  * need to be certain they do not bootstrap Drupal. If they do, you will need to
@@ -50,21 +46,18 @@
  * Default value for this setting is FALSE.
  */
 # $settings['fast404_url_whitelisting'] = TRUE;
-
 /**
  * Array of allowed files/urls. Used if URL whitelisting is set to TRUE.
  *
  * Default value for this setting is an empty array.
  */
 # $settings['fast404_whitelist'] = ['index.php', 'rss.xml', 'install.php', 'cron.php', 'update.php', 'xmlrpc.php'];
-
 /**
  * Array of allowed URL fragment strings that conflict with Fast 404.
  *
  * Default value for this setting is FALSE.
  */
 # $settings['fast404_string_whitelisting'] = ['/admin', '/cdn/ff', '/advagg_'];
-
 /**
  * When Fast 404 checks for missing file assets, it will return a response
  * containing the message set in the fast404_html settings. You can override
@@ -74,7 +67,6 @@
  * Default value for this setting is FALSE.
  */
 # $settings['fast404_HTML_error_all_paths'] = TRUE;
-
 /**
  * Subscribe to NotFoundHttpException event.
  *
@@ -89,7 +81,6 @@
  * Default value for this setting is FALSE.
  */
 # $settings['fast404_not_found_exception'] = TRUE;
-
 /**
  * Path checking. USE AT YOUR OWN RISK.
  *
@@ -104,7 +95,6 @@
  * Default value for this setting is FALSE.
  */
 # $settings['fast404_path_check'] = TRUE;
-
 /**
  * If you would prefer a stronger version of NO then return a 410 instead of a
  * 404. This informs clients that not only is the resource currently not
@@ -114,7 +104,6 @@
  * Default value for this setting is FALSE.
  */
 # $settings['fast404_return_gone'] = TRUE;
-
 /**
  * If you use FastCGI, uncomment this line to send the type of header it needs.
  * Reference: http://php.net/manual/en/function.header.php
@@ -122,7 +111,6 @@
  * Default value for this setting is 'mod_php'.
  */
 # $settings['fast404_HTTP_status_method'] = 'FastCGI';
-
 /**
  * Default Fast 404 error message.
  *
@@ -130,7 +118,6 @@
  * replaced by the the path being requested relative to the executed script.
  */
 # $settings['fast404_html'] = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>404 Not Found</title></head><body><h1>Not Found</h1><p>The requested URL "@path" was not found on this server.</p></body></html>';
-
 /**
  * By default we will show a super plain 404, because usually errors like this
  * are shown to browsers who only look at the headers. However, some cases
@@ -142,7 +129,6 @@
  * Default value for this setting is FALSE.
  */
 # $settings['fast404_HTML_error_page'] = './my_page.html';
-
 /**
  * Load the fast404.inc file.
  *
@@ -150,7 +136,6 @@
  *
  * WARNING: This is not fully implemented and not ready to use.
  * @see: https://www.drupal.org/project/fast_404/issues/2961512
- *
  */
 # if (file_exists($app_root . '/modules/contrib/fast_404/fast404.inc')) {
 #   include_once $app_root . '/modules/contrib/fast_404/fast404.inc';
diff --git a/tests/src/Unit/Fast404EventSubscriberTest.php b/tests/src/Unit/Fast404EventSubscriberTest.php
index 4140dd0..5db0daf 100644
--- a/tests/src/Unit/Fast404EventSubscriberTest.php
+++ b/tests/src/Unit/Fast404EventSubscriberTest.php
@@ -39,7 +39,7 @@ class Fast404EventSubscriberTest extends UnitTestCase {
    *
    * @covers ::onKernelRequest
    */
-  // public function testOnKernelRequest() {}
+  // Public function testOnKernelRequest() {}.
 
   /**
    * Tests event handling for not found exceptions.
diff --git a/tests/src/Unit/Fast404Test.php b/tests/src/Unit/Fast404Test.php
index f0acb71..741fd34 100644
--- a/tests/src/Unit/Fast404Test.php
+++ b/tests/src/Unit/Fast404Test.php
@@ -64,20 +64,19 @@ class Fast404Test extends UnitTestCase {
    *
    * @covers ::extensionCheck
    */
-  // public function testExtensionCheck() {}
+  // Public function testExtensionCheck() {}.
 
   /**
    * Tests checking if a path is blocked.
    *
    * @covers ::pathCheck
    */
-  // public function testPathCheck() {}
+  // Public function testPathCheck() {}.
 
   /**
    * Tests Fast404 responses.
    *
    * @covers ::response
    */
-  // public function testResponse() {}
-
+  // Public function testResponse() {}.
 }
