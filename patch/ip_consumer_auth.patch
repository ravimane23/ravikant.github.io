diff --git a/src/Authentication/Provider/IPConsumerAuth.php b/src/Authentication/Provider/IPConsumerAuth.php
index 1e24c81..a975fe3 100644
--- a/src/Authentication/Provider/IPConsumerAuth.php
+++ b/src/Authentication/Provider/IPConsumerAuth.php
@@ -1,10 +1,5 @@
 <?php
 
-/**
- * @file
- * Contains \Drupal\ip_consumer_auth\Authentication\Provider\IPConsumerAuth.
- */
-
 namespace Drupal\ip_consumer_auth\Authentication\Provider;
 
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
diff --git a/src/Form/ConsumersForm.php b/src/Form/ConsumersForm.php
index 5162b1e..165f77f 100644
--- a/src/Form/ConsumersForm.php
+++ b/src/Form/ConsumersForm.php
@@ -1,10 +1,5 @@
 <?php
 
-/**
- * @file
- * Contains Drupal\ip_consumer_auth\Form\ConsumersForm.
- */
-
 namespace Drupal\ip_consumer_auth\Form;
 
 use Drupal\Core\Form\ConfigFormBase;
@@ -48,6 +43,7 @@ class ConsumersForm extends ConfigFormBase {
   public function getFormId() {
     return 'ip_consumer_auth_settings_form';
   }
+
   /**
    * {@inheritdoc}
    */
@@ -68,15 +64,15 @@ class ConsumersForm extends ConfigFormBase {
       '#default_value' => $config->get('ip_consumers'),
     ];
 
-    $options = array(0 => t('Blacklist'), 1 => t('Whitelist'));
-    $form['list_type'] = array(
+    $options = [0 => t('Blacklist'), 1 => t('Whitelist')];
+    $form['list_type'] = [
       '#type' => 'radios',
       '#title' => t('Type of IP list'),
       '#default_value' => $config->get('list_type'),
       '#options' => $options,
       '#description' => t('Define the behaviour to use when applying the IP list as authentication method for REST resources. A whitelist will only allow access to the specified IPs. A blacklist will allow access to the all IPs, except the specified ones.'),
       '#required' => TRUE,
-    );
+    ];
 
     $form['format'] = [
       '#type' => 'checkboxes',
