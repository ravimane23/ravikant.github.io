diff --git a/css/search_api_autocomplete.css b/css/search_api_autocomplete.css
index 368c5bf..bdd576f 100644
--- a/css/search_api_autocomplete.css
+++ b/css/search_api_autocomplete.css
@@ -11,8 +11,8 @@
 }
 
 .search-api-autocomplete-search .ui-menu-item-wrapper.ui-state-active .search-api-autocomplete-suggestion {
-  background: #0072B9;
-  color: #FFF;
+  background: #0072b9;
+  color: #fff;
 }
 
 .search-api-autocomplete-search .ui-menu-item {
diff --git a/tests/src/Functional/CacheInvalidationTest.php b/tests/src/Functional/CacheInvalidationTest.php
index db424bd..971b174 100644
--- a/tests/src/Functional/CacheInvalidationTest.php
+++ b/tests/src/Functional/CacheInvalidationTest.php
@@ -50,7 +50,6 @@ class CacheInvalidationTest extends BrowserTestBase {
     // $this->placeBlock('search_api_page_form_block', [
     //   'search_api_page' => 'test_search',
     // ]);
-
     // Enable the "Custom scripts" suggester.
     \Drupal::configFactory()
       ->getEditable('search_api_autocomplete.settings')
@@ -85,7 +84,6 @@ class CacheInvalidationTest extends BrowserTestBase {
     // $page_selector = ".search-api-page-block-form $input_selector";
     // $element = $assert_session->elementExists('css', $page_selector);
     // $this->assertFalse($element->hasAttribute($attribute));
-
     // Then, add autocomplete settings for both searches.
     $views_search = Search::create([
       'id' => 'search_api_autocomplete_test_view',
@@ -118,7 +116,6 @@ class CacheInvalidationTest extends BrowserTestBase {
     //   ],
     // ]);
     // $page_search->save();
-
     // View the page again and verify that autocomplete was now added for both
     // forms.
     $this->drupalGet('');
@@ -128,7 +125,6 @@ class CacheInvalidationTest extends BrowserTestBase {
 
     // $assert_session->elementAttributeContains('css', $page_selector, 'data-search-api-autocomplete-search', $page_search->id());
     // $assert_session->elementAttributeContains('css', $page_selector, 'data-autocomplete-path', '/bar');
-
     // Change the autocomplete search settings.
     $views_search->getSuggester('custom_script')->setConfiguration([
       'path' => '/foobar',
@@ -139,7 +135,6 @@ class CacheInvalidationTest extends BrowserTestBase {
     //   'path' => '/foo/bar',
     // ]);
     // $page_search->save();
-
     // Verify the changes are correctly applied when reloading the page.
     $this->drupalGet('');
 
