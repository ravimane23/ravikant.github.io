diff --git a/src/Commands/StructureSyncCommands.php b/src/Commands/StructureSyncCommands.php
index ef4703e..c1398ab 100644
--- a/src/Commands/StructureSyncCommands.php
+++ b/src/Commands/StructureSyncCommands.php
@@ -19,7 +19,7 @@ use Drupal\structure_sync\StructureSyncHelper;
 class StructureSyncCommands extends DrushCommands {
 
   /**
-   * Export the taxonomies
+   * Export the taxonomies.
    *
    * @validate-module-enabled structure_sync
    *
@@ -36,7 +36,7 @@ class StructureSyncCommands extends DrushCommands {
   }
 
   /**
-   * Import the taxonomies
+   * Import the taxonomies.
    *
    * @validate-module-enabled structure_sync
    *
@@ -48,7 +48,7 @@ class StructureSyncCommands extends DrushCommands {
   public function importTaxonomies($options = ['choice' => NULL]) {
     $this->output()->writeln('Importing taxonomies...');
 
-   $choices = [
+    $choices = [
       'full' => 'Full',
       'safe' => 'Safe',
       'force' => 'Force',
@@ -74,7 +74,7 @@ class StructureSyncCommands extends DrushCommands {
   }
 
   /**
-   * Export blocks
+   * Export blocks.
    *
    * @validate-module-enabled structure_sync
    *
@@ -90,7 +90,7 @@ class StructureSyncCommands extends DrushCommands {
   }
 
   /**
-   * Import blocks
+   * Import blocks.
    *
    * @validate-module-enabled structure_sync
    *
@@ -102,7 +102,7 @@ class StructureSyncCommands extends DrushCommands {
   public function importBlocks($options = ['choice' => NULL]) {
     $this->output()->writeln('Importing blocks...');
 
-   $choices = [
+    $choices = [
       'full' => 'Full',
       'safe' => 'Safe',
       'force' => 'Force',
@@ -128,7 +128,7 @@ class StructureSyncCommands extends DrushCommands {
   }
 
   /**
-   * Export menu links
+   * Export menu links.
    *
    * @validate-module-enabled structure_sync
    *
@@ -144,7 +144,7 @@ class StructureSyncCommands extends DrushCommands {
   }
 
   /**
-   * Import menu links
+   * Import menu links.
    *
    * @validate-module-enabled structure_sync
    *
@@ -157,7 +157,7 @@ class StructureSyncCommands extends DrushCommands {
 
     $this->output()->writeln('Importing menu links...');
 
-   $choices = [
+    $choices = [
       'full' => 'Full',
       'safe' => 'Safe',
       'force' => 'Force',
@@ -183,7 +183,7 @@ class StructureSyncCommands extends DrushCommands {
   }
 
   /**
-   * Import menu links, Taxonomy and Blocks
+   * Import menu links, Taxonomy and Blocks.
    *
    * @validate-module-enabled structure_sync
    *
@@ -199,7 +199,7 @@ class StructureSyncCommands extends DrushCommands {
   }
 
   /**
-   * Export menu links, Taxonomy and Blocks
+   * Export menu links, Taxonomy and Blocks.
    *
    * @validate-module-enabled structure_sync
    *
diff --git a/src/Controller/BlocksController.php b/src/Controller/BlocksController.php
index c3adf88..0704d7e 100644
--- a/src/Controller/BlocksController.php
+++ b/src/Controller/BlocksController.php
@@ -65,8 +65,8 @@ class BlocksController extends ControllerBase {
         'langcode' => $block->langcode->getValue()[0]['value'],
         'uuid' => $block->uuid(),
         'bundle' => $block->bundle(),
-        'revision_id' => null,
-        'rev_id_current' => null,
+        'revision_id' => NULL,
+        'rev_id_current' => NULL,
       ];
 
       $entityFieldManager = StructureSyncHelper::getEntityFieldManager();
@@ -234,14 +234,14 @@ class BlocksController extends ControllerBase {
       $uuidsInConfig[] = $block['uuid'];
     }
 
-    if(!empty($uuidsInConfig)) {
-        $query = StructureSyncHelper::getEntityQuery('block_content');
-        $query->condition('uuid', $uuidsInConfig, 'NOT IN');
-        $ids = $query->execute();
-        $controller = StructureSyncHelper::getEntityManager()
-            ->getStorage('block_content');
-        $entities = $controller->loadMultiple($ids);
-        $controller->delete($entities);
+    if (!empty($uuidsInConfig)) {
+      $query = StructureSyncHelper::getEntityQuery('block_content');
+      $query->condition('uuid', $uuidsInConfig, 'NOT IN');
+      $ids = $query->execute();
+      $controller = StructureSyncHelper::getEntityManager()
+        ->getStorage('block_content');
+      $entities = $controller->loadMultiple($ids);
+      $controller->delete($entities);
     }
 
     if (array_key_exists('drush', $context) && $context['drush'] === TRUE) {
@@ -263,13 +263,13 @@ class BlocksController extends ControllerBase {
     }
 
     $entities = [];
-    if(!empty($uuidsInConfig)) {
-        $query = StructureSyncHelper::getEntityQuery('block_content');
-        $query->condition('uuid', $uuidsInConfig, 'IN');
-        $ids = $query->execute();
-        $controller = StructureSyncHelper::getEntityManager()
-            ->getStorage('block_content');
-        $entities = $controller->loadMultiple($ids);
+    if (!empty($uuidsInConfig)) {
+      $query = StructureSyncHelper::getEntityQuery('block_content');
+      $query->condition('uuid', $uuidsInConfig, 'IN');
+      $ids = $query->execute();
+      $controller = StructureSyncHelper::getEntityManager()
+        ->getStorage('block_content');
+      $entities = $controller->loadMultiple($ids);
     }
 
     $context['sandbox']['max'] = count($blocks);
diff --git a/src/Controller/MenuLinksController.php b/src/Controller/MenuLinksController.php
index 354b4c1..87b075e 100755
--- a/src/Controller/MenuLinksController.php
+++ b/src/Controller/MenuLinksController.php
@@ -222,13 +222,13 @@ class MenuLinksController extends ControllerBase {
     }
 
     if (!empty($uuidsInConfig)) {
-        $query = StructureSyncHelper::getEntityQuery('menu_link_content');
-        $query->condition('uuid', $uuidsInConfig, 'NOT IN');
-        $ids = $query->execute();
-        $controller = StructureSyncHelper::getEntityManager()
-            ->getStorage('menu_link_content');
-        $entities = $controller->loadMultiple($ids);
-        $controller->delete($entities);
+      $query = StructureSyncHelper::getEntityQuery('menu_link_content');
+      $query->condition('uuid', $uuidsInConfig, 'NOT IN');
+      $ids = $query->execute();
+      $controller = StructureSyncHelper::getEntityManager()
+        ->getStorage('menu_link_content');
+      $entities = $controller->loadMultiple($ids);
+      $controller->delete($entities);
     }
 
     if (array_key_exists('drush', $context) && $context['drush'] === TRUE) {
@@ -250,12 +250,12 @@ class MenuLinksController extends ControllerBase {
     }
     $entities = [];
     if (!empty($uuidsInConfig)) {
-        $query = StructureSyncHelper::getEntityQuery('menu_link_content');
-        $query->condition('uuid', $uuidsInConfig, 'IN');
-        $ids = $query->execute();
-        $controller = StructureSyncHelper::getEntityManager()
-            ->getStorage('menu_link_content');
-        $entities = $controller->loadMultiple($ids);
+      $query = StructureSyncHelper::getEntityQuery('menu_link_content');
+      $query->condition('uuid', $uuidsInConfig, 'IN');
+      $ids = $query->execute();
+      $controller = StructureSyncHelper::getEntityManager()
+        ->getStorage('menu_link_content');
+      $entities = $controller->loadMultiple($ids);
     }
 
     $parents = array_column($menus, 'parent');
diff --git a/src/Controller/TaxonomiesController.php b/src/Controller/TaxonomiesController.php
index 50aa309..1f1e527 100755
--- a/src/Controller/TaxonomiesController.php
+++ b/src/Controller/TaxonomiesController.php
@@ -126,12 +126,12 @@ class TaxonomiesController extends ControllerBase {
               foreach ($entity_reference_field_value as $field_item) {
                 $target_term_entity = StructureSyncHelper::getEntityManager()
                   ->getStorage('taxonomy_term')->load($field_item['target_id']);
-		if ($target_term_entity) {
+                if ($target_term_entity) {
                   $entity_fields[$field_name][] = [
                     'name' => $target_term_entity->getName(),
-                    'vid' => $target_term_entity->getVocabularyId()
+                    'vid' => $target_term_entity->getVocabularyId(),
                   ];
-		}
+                }
               }
             }
           }
@@ -196,7 +196,7 @@ class TaxonomiesController extends ControllerBase {
     }
 
     // Sorts taxonomies so that all parent terms come before -- and therefore
-    // are created before -- their respective child terms
+    // are created before -- their respective child terms.
     foreach ($taxonomies as $taxonomy => $terms) {
       $parents = [];
       foreach ($terms as $key => $term_data) {
@@ -300,7 +300,7 @@ class TaxonomiesController extends ControllerBase {
       }
     }
 
-    if(!empty($uuidsInConfig)) {
+    if (!empty($uuidsInConfig)) {
       $query = StructureSyncHelper::getEntityQuery('taxonomy_term');
       $query->condition('uuid', $uuidsInConfig, 'NOT IN');
       $tids = $query->execute();
@@ -330,7 +330,7 @@ class TaxonomiesController extends ControllerBase {
       }
     }
     $entities = [];
-    if(!empty($uuidsInConfig)) {
+    if (!empty($uuidsInConfig)) {
       $query = StructureSyncHelper::getEntityQuery('taxonomy_term');
       $query->condition('uuid', $uuidsInConfig, 'IN');
       $tids = $query->execute();
@@ -390,7 +390,8 @@ class TaxonomiesController extends ControllerBase {
                       $entity_fields[$field_name][] = [
                         'target_id' => reset($tid),
                       ];
-                    } else {
+                    }
+                    else {
                       // If we encounter a term reference field referencing a
                       // term that hasn't been imported again, trigger re-import
                       // following current import to update term reference
@@ -486,7 +487,7 @@ class TaxonomiesController extends ControllerBase {
         StructureSyncHelper::logMessage('Running additional full import'
           . ' after all terms have been created in order to identify missing '
           . ' TIDs for term reference fields.');
-        Self::importTaxonomiesFull($taxonomies, $context);
+        self::importTaxonomiesFull($taxonomies, $context);
       }
 
       $firstRun = FALSE;
@@ -580,7 +581,8 @@ class TaxonomiesController extends ControllerBase {
                           $entity_fields[$field_name][] = [
                             'target_id' => reset($tid),
                           ];
-                        } else {
+                        }
+                        else {
                           // If we encounter a term reference field referencing a
                           // term that hasn't been imported again, trigger re-import
                           // following current import to update term reference
@@ -654,7 +656,7 @@ class TaxonomiesController extends ControllerBase {
         StructureSyncHelper::logMessage('Running additional full import'
           . ' after all terms have been created in order to identify missing '
           . ' TIDs for term reference fields.');
-        Self::importTaxonomiesFull($taxonomies, $context);
+        self::importTaxonomiesFull($taxonomies, $context);
       }
 
       $firstRun = FALSE;
@@ -747,7 +749,8 @@ class TaxonomiesController extends ControllerBase {
                         $entity_fields[$field_name][] = [
                           'target_id' => reset($tid),
                         ];
-                      } else {
+                      }
+                      else {
                         // If we encounter a term reference field referencing a
                         // term that hasn't been imported again, trigger re-import
                         // following current import to update term reference
@@ -804,7 +807,7 @@ class TaxonomiesController extends ControllerBase {
         StructureSyncHelper::logMessage('Running additional full import'
           . ' after all terms have been created in order to identify missing '
           . ' TIDs for term reference fields.');
-        Self::importTaxonomiesFull($taxonomies, $context);
+        self::importTaxonomiesFull($taxonomies, $context);
       }
 
       $firstRun = FALSE;
