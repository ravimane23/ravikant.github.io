diff --git a/src/Extension/LibraryDiscovery.php b/src/Extension/LibraryDiscovery.php
index d22f6b1..4b17b1a 100644
--- a/src/Extension/LibraryDiscovery.php
+++ b/src/Extension/LibraryDiscovery.php
@@ -26,13 +26,13 @@ class LibraryDiscovery extends ExtensionDiscovery {
    *
    * @var array
    */
-  protected static $files = array();
+  protected static $files = [];
 
   /**
    * {@inheritdoc}
    */
   protected function scanDirectory($dir, $include_tests) {
-    $files = array();
+    $files = [];
 
     // In order to scan top-level directories, absolute directory paths have to
     // be used (which also improves performance, since any configured PHP
diff --git a/src/StreamWrapper/LocalReadOnlyStream.php b/src/StreamWrapper/LocalReadOnlyStream.php
index cb02c0f..78c69d4 100644
--- a/src/StreamWrapper/LocalReadOnlyStream.php
+++ b/src/StreamWrapper/LocalReadOnlyStream.php
@@ -36,7 +36,7 @@ abstract class LocalReadOnlyStream extends LocalStream {
    * @see http://php.net/manual/streamwrapper.stream-open.php
    */
   public function stream_open($uri, $mode, $options, &$opened_path) {
-    if (!in_array($mode, array('r', 'rb', 'rt'))) {
+    if (!in_array($mode, ['r', 'rb', 'rt'])) {
       if ($options & STREAM_REPORT_ERRORS) {
         trigger_error('stream_open() write modes not supported for read-only stream wrappers', E_USER_WARNING);
       }
@@ -67,19 +67,18 @@ abstract class LocalReadOnlyStream extends LocalStream {
    * @see http://php.net/manual/streamwrapper.stream-lock.php
    */
   public function stream_lock($operation) {
-    // Disallow exclusive lock or non-blocking lock requests
-    if (in_array($operation, array(LOCK_EX, LOCK_EX|LOCK_NB))) {
+    // Disallow exclusive lock or non-blocking lock requests.
+    if (in_array($operation, [LOCK_EX, LOCK_EX | LOCK_NB])) {
       trigger_error('stream_lock() exclusive lock operations not supported for read-only stream wrappers', E_USER_WARNING);
       return FALSE;
     }
-    if (in_array($operation, array(LOCK_SH, LOCK_UN, LOCK_SH|LOCK_NB))) {
+    if (in_array($operation, [LOCK_SH, LOCK_UN, LOCK_SH | LOCK_NB])) {
       return flock($this->handle, $operation);
     }
 
     return TRUE;
   }
 
-
   /**
    * Support for fwrite(), file_put_contents() etc.
    *
diff --git a/src/StreamWrapper/LocalStream.php b/src/StreamWrapper/LocalStream.php
index 6d88378..9d754f3 100644
--- a/src/StreamWrapper/LocalStream.php
+++ b/src/StreamWrapper/LocalStream.php
@@ -1,6 +1,7 @@
 <?php
 
 namespace Drupal\system_stream_wrapper\StreamWrapper;
+
 use Drupal\Core\StreamWrapper\StreamWrapperInterface;
 
 /**
@@ -31,7 +32,7 @@ abstract class LocalStream extends StreamWrapperBase {
    * @return string
    *   String specifying the path.
    */
-  protected abstract function getDirectoryPath();
+  abstract protected function getDirectoryPath();
 
   /**
    * {@inheritdoc}
@@ -128,7 +129,7 @@ abstract class LocalStream extends StreamWrapperBase {
    * @see http://php.net/manual/streamwrapper.stream-lock.php
    */
   public function stream_lock($operation) {
-    if (in_array($operation, array(LOCK_SH, LOCK_EX, LOCK_UN, LOCK_NB))) {
+    if (in_array($operation, [LOCK_SH, LOCK_EX, LOCK_UN, LOCK_NB])) {
       return flock($this->handle, $operation);
     }
 
@@ -181,7 +182,7 @@ abstract class LocalStream extends StreamWrapperBase {
    * {@inheritdoc}
    */
   public function stream_seek($offset, $whence = SEEK_SET) {
-    // fseek returns 0 on success and -1 on a failure.
+    // Fseek returns 0 on success and -1 on a failure.
     // stream_seek   1 on success and  0 on a failure.
     return !fseek($this->handle, $offset, $whence);
   }
@@ -484,4 +485,5 @@ abstract class LocalStream extends StreamWrapperBase {
     // have a return value.
     return TRUE;
   }
+
 }
diff --git a/src/StreamWrapper/LocalStreamTrait.php b/src/StreamWrapper/LocalStreamTrait.php
index 08b53fb..5e2da1f 100644
--- a/src/StreamWrapper/LocalStreamTrait.php
+++ b/src/StreamWrapper/LocalStreamTrait.php
@@ -1,10 +1,5 @@
 <?php
 
-/**
- * @file
- * Contains \Drupal\Core\StreamWrapper\LocalStreamTrait.
- */
-
 namespace Drupal\system_stream_wrapper\StreamWrapper;
 
 /**
@@ -71,5 +66,4 @@ trait LocalStreamTrait {
     return trim($uri_parts[1], '\/');
   }
 
-
 }
diff --git a/src/StreamWrapper/StreamWrapperBase.php b/src/StreamWrapper/StreamWrapperBase.php
index 5657cb9..914315e 100644
--- a/src/StreamWrapper/StreamWrapperBase.php
+++ b/src/StreamWrapper/StreamWrapperBase.php
@@ -35,7 +35,7 @@ abstract class StreamWrapperBase implements StreamWrapperInterface {
   /**
    * {@inheritdoc}
    */
-  function setUri($uri) {
+  public function setUri($uri) {
     if (strpos($uri, '://') === FALSE) {
       // The delimiter ('://') was not found in $uri, malformed $uri passed.
       throw new \InvalidArgumentException("Malformed uri parameter passed: {$this->uri}");
@@ -46,7 +46,7 @@ abstract class StreamWrapperBase implements StreamWrapperInterface {
   /**
    * {@inheritdoc}
    */
-  function getUri() {
+  public function getUri() {
     return $this->uri;
   }
 
diff --git a/tests/src/Kernel/File/ExtensionStreamTest.php b/tests/src/Kernel/File/ExtensionStreamTest.php
index 1fe2d58..304522e 100644
--- a/tests/src/Kernel/File/ExtensionStreamTest.php
+++ b/tests/src/Kernel/File/ExtensionStreamTest.php
@@ -1,10 +1,5 @@
 <?php
 
-/**
- * @file
- * Contains \Drupal\Tests\system_stream_wrapper\Kernel\File\ExtensionStreamTest.
- */
-
 namespace Drupal\Tests\system_stream_wrapper\Kernel\File;
 
 use Drupal\Core\Site\Settings;
@@ -60,7 +55,7 @@ class ExtensionStreamTest extends KernelTestBase {
     $system_module_files += ['minimal' => 'core/profiles/minimal/minimal.info.yml'];
     $state->set('system.module.files', $system_module_files);
     // Add default profile for the purposes of this test.
-    new Settings(Settings::getAll() +  ['install_profile' => 'minimal']);
+    new Settings(Settings::getAll() + ['install_profile' => 'minimal']);
     $this->config('core.extension')->set('module.minimal', 0)->save();
     $this->container->get('module_handler')->addProfile('minimal', 'core/profiles/minimal');
 
@@ -132,7 +127,7 @@ class ExtensionStreamTest extends KernelTestBase {
     $case = compact($dirname, $realpath, $getExternalUrl);
 
     foreach ($case as $method => $expected) {
-      list($scheme, ) = explode('://', $uri);
+      list($scheme,) = explode('://', $uri);
       $this->streamWrappers[$scheme]->setUri($uri);
       if ($expected instanceof \InvalidArgumentException) {
         /** @var \InvalidArgumentException $expected */
@@ -146,7 +141,7 @@ class ExtensionStreamTest extends KernelTestBase {
         }
       }
       elseif (is_string($expected)) {
-        $this->assertSame($expected,  $this->streamWrappers[$scheme]->$method());
+        $this->assertSame($expected, $this->streamWrappers[$scheme]->$method());
       }
     }
   }
diff --git a/tests/src/Kernel/LibraryDiscoveryTest.php b/tests/src/Kernel/LibraryDiscoveryTest.php
index 8cd60e4..1c83a0a 100644
--- a/tests/src/Kernel/LibraryDiscoveryTest.php
+++ b/tests/src/Kernel/LibraryDiscoveryTest.php
@@ -1,13 +1,7 @@
 <?php
 
-/**
- * @file
- * Contains \Drupal\Tests\system_stream_wrapper\Kernel\File\ExtensionStreamTest.
- */
-
 namespace Drupal\Tests\system_stream_wrapper\Kernel;
 
-use Drupal\Core\Site\Settings;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
