diff --git a/css/tb_megamenu.base.css b/css/tb_megamenu.base.css
index 55fd00b..0cc52d3 100644
--- a/css/tb_megamenu.base.css
+++ b/css/tb_megamenu.base.css
@@ -868,10 +868,10 @@
   outline-offset: -2px;
 }
 .tb-megamenu span.tb-megamenu-no-link:hover {
-    cursor: default;
+  cursor: default;
 }
 .tb-megamenu span.tb-megamenu-no-link.tb-megamenu-no-submenu:hover {
-    color: inherit !important;
+  color: inherit !important;
 }
 @media (max-width: 979px) {
   .tb-megamenu .navbar .brand {
diff --git a/js/tb-megamenu-frontend.js b/js/tb-megamenu-frontend.js
index 4c73f37..9e4abda 100644
--- a/js/tb-megamenu-frontend.js
+++ b/js/tb-megamenu-frontend.js
@@ -39,7 +39,6 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         }
       });
 
-
       var isTouch = 'ontouchstart' in window && !(/hp-tablet/gi).test(navigator.appVersion);
       if (!isTouch) {
         $(document).ready(function ($) {
@@ -91,4 +90,3 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 })(jQuery, Drupal, drupalSettings);
-
diff --git a/js/tb-megamenu-touch.js b/js/tb-megamenu-touch.js
index 65ad617..c53b754 100644
--- a/js/tb-megamenu-touch.js
+++ b/js/tb-megamenu-touch.js
@@ -2,12 +2,12 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
 
 (function ($, Drupal, drupalSettings) {
   "use strict";
-  
-  Drupal.TBMegaMenu.createTouchMenu = function(items) {
-      items.children('a').each( function() {
+
+  Drupal.TBMegaMenu.createTouchMenu = function (items) {
+      items.children('a').each( function () {
         var $item = $(this);
         var tbitem = $(this).parent();
-        $item.click( function(event){
+        $item.click( function (event) {
           if ($item.hasClass('tb-megamenu-clicked')) {
             var $uri = $item.attr('href');
             window.location.href = $uri;
@@ -15,23 +15,23 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
           else {
             event.preventDefault();
             $item.addClass('tb-megamenu-clicked');
-            if(!tbitem.hasClass('open')){	
+            if(!tbitem.hasClass('open')){
               tbitem.addClass('open');
             }
           }
-        }).closest('li').mouseleave( function(){
+        }).closest('li').mouseleave( function () {
           $item.removeClass('tb-megamenu-clicked');
           tbitem.removeClass('open');
         });
      });
      /*
      items.children('a').children('span.caret').each( function() {
-	var $item = $(this).parent();
+    var $item = $(this).parent();
         $item.click(function(event){
           tbitem = $item.parent();
           if ($item.hasClass('tb-megamenu-clicked')) {
             Drupal.TBMegaMenu.eventStopPropagation(event);
-            if(tbitem.hasClass('open')){	
+            if(tbitem.hasClass('open')){
               tbitem.removeClass('open');
               $item.removeClass('tb-megamenu-clicked');
             }
@@ -39,7 +39,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
           else {
             Drupal.TBMegaMenu.eventStopPropagation(event);
             $item.addClass('tb-megamenu-clicked');
-            if(!tbitem.hasClass('open')){	
+            if(!tbitem.hasClass('open')){
               tbitem.addClass('open');
               $item.removeClass('tb-megamenu-clicked');
             }
@@ -48,8 +48,8 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
      });
      */
   };
-  
-  Drupal.TBMegaMenu.eventStopPropagation = function(event) {
+
+  Drupal.TBMegaMenu.eventStopPropagation = function (event) {
     if (event.stopPropagation) {
       event.stopPropagation();
     }
@@ -57,9 +57,9 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       window.event.cancelBubble = true;
     }
   };
-  
+
   Drupal.behaviors.tbMegaMenuTouchAction = {
-    attach: function(context) {
+    attach: function (context) {
       var isTouch = 'ontouchstart' in window && !(/hp-tablet/gi).test(navigator.appVersion);
       if(isTouch){
         $('html').addClass('touch');
diff --git a/js/tb-megamenu.backend.js b/js/tb-megamenu.backend.js
index c89f4fd..6620a4e 100644
--- a/js/tb-megamenu.backend.js
+++ b/js/tb-megamenu.backend.js
@@ -2,23 +2,23 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
 
 (function ($, Drupal, drupalSettings) {
   "use strict";
-  
+
   Drupal.behaviors.tbMegaMenuBackendAction = {
     attach: function (context) {
-      $('select[name="tb-megamenu-animation"]').change(function() {
+      $('select[name="tb-megamenu-animation"]').change(function () {
         $('#tb-megamenu-duration-wrapper').css({'display': ($(this).val() == 'none' ? 'none' : 'inline-block')});
         $('#tb-megamenu-delay-wrapper').css({'display': ($(this).val() == 'none' ? 'none' : 'inline-block')});
       });
-      
-      $(".tb-megamenu-column-inner .close").click(function() {
+
+      $(".tb-megamenu-column-inner .close").click(function () {
         $(this).parent().html("");
       });
-      
+
       $("#tb-megamenu-admin select").chosen({
         disable_search_threshold : 15,
         allow_single_deselect: true
       });
-      
+
       /* Init TB Mega Menu. */
       if (drupalSettings.TBMegaMenu.menu_name !== undefined) {
         $("#tb-megamenu-admin-mm-container").megamenuAdmin({menu_name: drupalSettings.TBMegaMenu.menu_name});
@@ -26,4 +26,3 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 })(jQuery, Drupal, drupalSettings);
-
diff --git a/js/tb-megamenu.object.js b/js/tb-megamenu.object.js
index eb60414..f114954 100644
--- a/js/tb-megamenu.object.js
+++ b/js/tb-megamenu.object.js
@@ -1,24 +1,24 @@
 Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
 
-(function($, Drupal, drupalSettings) {
+(function ($, Drupal, drupalSettings) {
   "use strict";
-  
+
   var currentSelected = null, megamenu, nav_items, nav_subs, nav_cols, nav_all;
   Drupal.TBMegaMenu.lockedAjax = false;
 
-  Drupal.TBMegaMenu.lockAjax = function() {
+  Drupal.TBMegaMenu.lockAjax = function () {
     Drupal.TBMegaMenu.lockedAjax = true;
   };
 
-  Drupal.TBMegaMenu.isLockedAjax = function() {
+  Drupal.TBMegaMenu.isLockedAjax = function () {
     return Drupal.TBMegaMenu.lockedAjax;
   };
 
-  Drupal.TBMegaMenu.releaseAjax = function() {
+  Drupal.TBMegaMenu.releaseAjax = function () {
     Drupal.TBMegaMenu.lockedAjax = false;
   };
 
-  $.fn.megamenuAdmin = function(options) {
+  $.fn.megamenuAdmin = function (options) {
     var defaultOptions = {};
     var options = $.extend(defaultOptions, options);
     megamenu = $(this).find('.tb-megamenu');
@@ -27,7 +27,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     nav_cols = megamenu.find('[class*="span"]');
 
     nav_all = nav_items.add(nav_subs).add(nav_cols);
-    nav_items.each(function() {
+    nav_items.each(function () {
       var a = $(this);
       var liitem = a.closest('li');
       if (liitem.attr('data-hidesub') == 1) {
@@ -42,18 +42,18 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
 
     bindEvents(nav_all);
     $('.toolbox-action, .toolbox-toggle, .toolbox-input').unbind("focus blur click change keydown");
-    $('.tb-megamenu-admin-mm-row').click(function(event) {
+    $('.tb-megamenu-admin-mm-row').click(function (event) {
       event.stopPropagation();
     });
 
-    $(document.body).click(function(event) {
+    $(document.body).click(function (event) {
       hide_toolbox(true);
     });
-    $('.back-megamenu-toolbox').click(function(event) {
+    $('.back-megamenu-toolbox').click(function (event) {
       hide_toolbox(true);
     });
 
-    $('.toolbox-action').click(function(event) {
+    $('.toolbox-action').click(function (event) {
       var action = $(this).attr('data-action');
       if (action) {
         actions.datas = $(this).data();
@@ -63,7 +63,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       return false;
     });
 
-    $('.toolbox-toggle').change(function(event) {
+    $('.toolbox-toggle').change(function (event) {
       var action = $(this).attr('data-action');
       if (action) {
         actions.datas = $(this).data();
@@ -73,19 +73,19 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       return false;
     });
 
-    $('.toolbox-input').bind('focus blur click', function(event) {
+    $('.toolbox-input').bind('focus blur click', function (event) {
       event.stopPropagation();
       return false;
     });
 
-    $('.toolbox-input').bind('keydown', function(event) {
+    $('.toolbox-input').bind('keydown', function (event) {
       if (event.keyCode == '13') {
         apply_toolbox(this);
         event.preventDefault();
       }
     });
 
-    $('.toolbox-input').change(function(event) {
+    $('.toolbox-input').change(function (event) {
       apply_toolbox(this);
       event.stopPropagation();
       return false;
@@ -95,7 +95,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
 
   var actions = {};
   actions.data = {};
-  actions.toggleSub = function() {
+  actions.toggleSub = function () {
     if (!currentSelected) {
       return;
     }
@@ -136,7 +136,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     update_toolbox();
   };
 
-  actions.toggleAutoArrow = function() {
+  actions.toggleAutoArrow = function () {
     var toggle = $('.toolitem-auto-arrow');
     toggle.find('label').removeClass('active btn-success btn-danger btn-primary');
     if (parseInt(toggle.attr('data-auto-arrow'))) {
@@ -149,7 +149,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 
-  actions.toggleAlwayShowSubmenu = function() {
+  actions.toggleAlwayShowSubmenu = function () {
     var toggle = $('.toolitem-always-show-submenu');
     toggle.find('label').removeClass('active btn-success btn-danger btn-primary');
     if (parseInt(toggle.attr('data-always-show-submenu'))) {
@@ -162,9 +162,10 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 
-  actions.showBlockTitle = function() {
-    if (!currentSelected)
+  actions.showBlockTitle = function () {
+    if (!currentSelected) {
       return;
+    }
     var toggle = $('.toolcol-showblocktitle');
     toggle.find('label').removeClass('active btn-success btn-danger btn-primary');
     if (parseInt(currentSelected.attr('data-showblocktitle'))) {
@@ -182,9 +183,10 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 
-  actions.toggleGroup = function() {
-    if (!currentSelected)
+  actions.toggleGroup = function () {
+    if (!currentSelected) {
       return;
+    }
     var liitem = currentSelected.parent();
     var sub = liitem.find('.nav-child:first');
     if (liitem.attr('data-level') == 1) {
@@ -208,7 +210,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     update_toolbox();
   };
 
-  actions.hideWhenCollapse = function() {
+  actions.hideWhenCollapse = function () {
     if (!currentSelected) {
       return;
     }
@@ -237,7 +239,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     update_toolbox();
   };
 
-  actions.alignment = function() {
+  actions.alignment = function () {
     var liitem = currentSelected.closest('li');
     liitem.removeClass('mega-align-left mega-align-center mega-align-right mega-align-justify').addClass('mega-align-' + actions.datas.align);
     if (actions.datas.align == 'justify') {
@@ -253,7 +255,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     update_toolbox();
   };
 
-  actions.moveItemsLeft = function() {
+  actions.moveItemsLeft = function () {
     if (!currentSelected) {
       return;
     }
@@ -266,7 +268,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
             $moveitems = $items.slice(0, itemidx + 1),
             itemleft = $items.length - $moveitems.length,
             $rows = $col.parent().parent().children('[class*="row"]'),
-            $cols = $rows.children('[class*="span"]').filter(function() {
+            $cols = $rows.children('[class*="span"]').filter(function () {
       return !$(this).attr('data-block')
     }),
             colidx = $cols.index($col);
@@ -279,7 +281,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       currentSelected = $col;
       actions.datas.addfirst = true;
       actions.addColumn();
-      $cols = $rows.children('[class*="span"]').filter(function() {
+      $cols = $rows.children('[class*="span"]').filter(function () {
         return !$(this).attr('data-block')
       });
       currentSelected = oldSelected;
@@ -297,7 +299,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     update_toolbox();
   };
 
-  actions.moveItemsRight = function() {
+  actions.moveItemsRight = function () {
     if (!currentSelected) {
       return;
     }
@@ -310,7 +312,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
             $moveitems = $items.slice(itemidx),
             itemleft = $items.length - $moveitems.length,
             $rows = $col.parent().parent().children('[class*="row"]'),
-            $cols = $rows.children('[class*="span"]').filter(function() {
+            $cols = $rows.children('[class*="span"]').filter(function () {
       return $(this).children('.mega-inner').children('.tb-megamenu-block').length == 0;
     });
 
@@ -324,7 +326,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       currentSelected = $col;
       actions.datas.addfirst = false;
       actions.addColumn();
-      $cols = $rows.children('[class*="span"]').filter(function() {
+      $cols = $rows.children('[class*="span"]').filter(function () {
         return $(this).children('.mega-inner').children('.tb-megamenu-block').length == 0;
       }),
       currentSelected = oldSelected;
@@ -341,7 +343,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     show_toolbox(currentSelected);
   };
 
-  actions.addRow = function() {
+  actions.addRow = function () {
     if (!currentSelected) {
       return;
     }
@@ -353,7 +355,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     show_toolbox($col);
   };
 
-  actions.rowUp = function() {
+  actions.rowUp = function () {
     if ( !currentSelected ) {
       return;
     }
@@ -377,7 +379,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     currentSelected = $rows.find('.selected');
   }
 
-  actions.rowDown = function() {
+  actions.rowDown = function () {
     if ( !currentSelected ) {
       return;
     }
@@ -403,7 +405,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     currentSelected = $rows.find('.selected');
   }
 
-  actions.addColumn = function() {
+  actions.addColumn = function () {
     if (!currentSelected) {
       return;
     }
@@ -420,13 +422,13 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
     $cols = $cols.add($col);
     bindEvents($col);
-    $cols.each(function(i) {
+    $cols.each(function (i) {
       $(this).removeClass('span' + $(this).attr('data-width')).addClass('span' + colwidths[i]).attr('data-width', colwidths[i]);
     });
     show_toolbox($col);
   };
 
-  actions.removeColumn = function() {
+  actions.removeColumn = function () {
     if (!currentSelected) {
       return;
     }
@@ -435,8 +437,8 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         $row = $col.parent(),
         $rows = $row.parent().children('[class*="row"]'),
         $allcols = $rows.children('[class*="span"]'),
-        $allmenucols = $allcols.filter(function() { return !$(this).attr('data-block'); }),
-        $haspos = $allcols.filter(function() { return $(this).attr('data-block'); }).length,
+        $allmenucols = $allcols.filter(function () { return !$(this).attr('data-block'); }),
+        $haspos = $allcols.filter(function () { return $(this).attr('data-block'); }).length,
         $cols = $row.children('[class*="span"]'),
         colcount = $cols.length - 1,
         colwidths = defaultColumnsWidth(colcount),
@@ -463,7 +465,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         $row.remove();
       } else {
         $cols = $cols.not($col);
-        $cols.each(function(i) {
+        $cols.each(function (i) {
           $(this).removeClass('span' + $(this).attr('data-width')).addClass('span' + colwidths[i]).attr('data-width', colwidths[i]);
         });
         $col.remove();
@@ -472,9 +474,9 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 
-  actions.resetConfig = function(options) {
+  actions.resetConfig = function (options) {
     if (Drupal.TBMegaMenu.isLockedAjax()) {
-      window.setTimeout(function() {
+      window.setTimeout(function () {
         actions.resetConfig(options);
       }, 200);
       return;
@@ -487,18 +489,18 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       url: drupalSettings.TBMegaMenu.saveConfigURL,
       contentType: "application/json; charset=utf-8",
       data: JSON.stringify({
-        'action': 'load', 
+        'action': 'load',
         'theme': drupalSettings.TBMegaMenu.theme,
         'menu_name': options['menu_name']
       }),
-      complete: function(msg) {
+      complete: function (msg) {
         $('#tb-megamenu-admin-mm-container').html(msg.responseText).megamenuAdmin({'menu_name': options['menu_name']});
-        $('#tb-megamenu-admin-mm-container').find('.mega-inner').children('span.close').click(function() {
+        $('#tb-megamenu-admin-mm-container').find('.mega-inner').children('span.close').click(function () {
           $(this).parent().html("");
         });
         $('#tb-megamenu-admin-mm-tb #toolbox-loading').hide();
         $('#tb-megamenu-admin-mm-tb #toolbox-message').html(Drupal.t("All unsaved changed has been reseted!")).show();
-        window.setTimeout(function() {
+        window.setTimeout(function () {
           $('#tb-megamenu-admin-mm-tb #toolbox-message').html("").hide();
         }, 5000);
         Drupal.TBMegaMenu.releaseAjax();
@@ -506,33 +508,33 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     });
   };
 
-  actions.saveConfig = function(options) {
+  actions.saveConfig = function (options) {
     if (Drupal.TBMegaMenu.isLockedAjax()) {
-      window.setTimeout(function() {
+      window.setTimeout(function () {
         actions.saveConfig(options);
       }, 200);
       return;
     }
     Drupal.TBMegaMenu.lockAjax();
     var menu_config = {}, items = megamenu.find('ul[class*="level"] > li');
-    items.each(function() {
+    items.each(function () {
       var $this = $(this),
           id = $this.attr('data-id'),
           rows = [];
       var level = parseInt($this.attr('data-level'));
       var $sub = $this.find('.nav-child:first');
       var $rows = $sub.find('[class*="row"]:first').parent().children('[class*="row"]');
-      $rows.each(function() {
+      $rows.each(function () {
         var $cols = $(this).children('[class*="span"]');
         var cols = [];
-        $cols.each(function() {
+        $cols.each(function () {
           var col_config = {};
           col_config['width'] = $(this).attr('data-width') ? $(this).attr('data-width') : "";
           col_config['class'] = $(this).attr('data-class') ? $(this).attr('data-class') : "";
           col_config['hidewcol'] = $(this).attr('data-hidewcol') ? $(this).attr('data-hidewcol') : "";
           col_config['showblocktitle'] = $(this).attr('data-showblocktitle') ? $(this).attr('data-showblocktitle') : "1";
           var col = {'col_content': [], 'col_config': col_config};
-          $(this).find('ul[class*="level"] > li').each(function() {
+          $(this).find('ul[class*="level"] > li').each(function () {
             var sub_level = parseInt($(this).attr('data-level'));
             if (sub_level == level + 1) {
               var ele = {};
@@ -542,7 +544,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
               col['col_content'].push(ele);
             }
           });
-          $(this).children('.mega-inner').children('.tb-megamenu-block').each(function() {
+          $(this).children('.mega-inner').children('.tb-megamenu-block').each(function () {
             var ele = {};
             ele['block_id'] = $(this).attr('data-block');
             ele['type'] = $(this).attr('data-type');
@@ -588,17 +590,17 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       url: drupalSettings.TBMegaMenu.saveConfigURL,
       contentType: "application/json; charset=utf-8",
       data: JSON.stringify({
-        'action': 'save', 
+        'action': 'save',
         'theme': drupalSettings.TBMegaMenu.theme,
-        'menu_name': options['menu_name'], 
-        'menu_config': menu_config, 
+        'menu_name': options['menu_name'],
+        'menu_config': menu_config,
         'block_config': block_config
       }),
-      complete: function(r) {
+      complete: function (r) {
         $('#tb-megamenu-admin-mm-tb #toolbox-loading').hide();
         var $div = $('<div class="messages messages--status" role="contentinfo" aria-label="Status message"><h2 class="visually-hidden">Status message</h2>' + r.responseText + '</div>');
         $('#tb-megamenu-admin-mm-tb #toolbox-message').html($div).show();
-        window.setTimeout(function() {
+        window.setTimeout(function () {
           $('#tb-megamenu-admin-mm-tb #toolbox-message').html("").hide();
         }, 7000);
         Drupal.TBMegaMenu.releaseAjax();
@@ -606,11 +608,11 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     });
   };
 
-  var toolbox_type = function() {
+  var toolbox_type = function () {
     return currentSelected ? currentSelected.hasClass('nav-child') ? 'sub' : (currentSelected[0].tagName == 'DIV' ? 'col' : 'item') : false;
   };
 
-  var hide_toolbox = function(show_intro) {
+  var hide_toolbox = function (show_intro) {
     $('#tb-megamenu-admin-mm-tb .admin-toolbox').hide();
     currentSelected = null;
     if (megamenu && megamenu.data('nav_all')) {
@@ -624,7 +626,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 
-  var show_toolbox = function(selected) {
+  var show_toolbox = function (selected) {
     if (!selected.hasClass('tb-megamenu-column') && !selected.hasClass('tb-megamenu-submenu')) {
       var level = parseInt($(selected).parent().attr('data-level'));
       if (level > 1) {
@@ -637,14 +639,16 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
       }
     }
     hide_toolbox(false);
-    if (selected)
+    if (selected) {
       currentSelected = selected;
+    }
     // remove class open for other
-    megamenu.find('ul[class*="level"] > li').each(function() {
-      if (!$(this).has(currentSelected).length > 0)
+    megamenu.find('ul[class*="level"] > li').each(function () {
+      if (!$(this).has(currentSelected).length > 0) {
         $(this).removeClass('open');
-      else
+      } else {
         $(this).addClass('open');
+      }
     });
 
     // set selected
@@ -657,7 +661,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     $('#tb-megamenu-admin-mm-tb').show();
   };
 
-  var update_toolbox = function(type) {
+  var update_toolbox = function (type) {
     if (!type) {
       type = toolbox_type();
     }
@@ -668,11 +672,11 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         var liitem = currentSelected.closest('li'),
             liparent = liitem.parent().closest('li'),
             sub = liitem.find('.nav-child:first');
-        
+
         $('.toolitem-exclass').val(liitem.attr('data-class'));
         $('.toolitem-xicon').val(liitem.attr('data-xicon'));
         $('.toolitem-caption').val(liitem.attr('data-caption'));
-        
+
         var toggle = $('.toolitem-sub');
         toggle.find('label').removeClass('active btn-success btn-danger btn-primary');
         if (parseInt(liitem.attr('data-group'))) {
@@ -766,7 +770,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   };
 
-  var update_toggle = function(toggle, val) {
+  var update_toggle = function (toggle, val) {
     var $input = toggle.find('input[value="' + val + '"]');
     /**
      * We use this function to set the check attribute.
@@ -776,7 +780,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     $input.trigger('update');
   };
 
-  var apply_toolbox = function(input) {
+  var apply_toolbox = function (input) {
     var name = $(input).attr('data-name'),
             value = input.value,
             type = toolbox_type();
@@ -804,6 +808,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         }
         $(input).val(value);
         break;
+
       case 'duration':
         value = parseInt(value);
         if (isNaN(value)) {
@@ -811,6 +816,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         }
         $(input).val(value);
         break;
+
       case 'delay':
         value = parseInt(value);
         if (isNaN(value)) {
@@ -818,6 +824,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         }
         $(input).val(value);
         break;
+
       case 'class':
         if (type == 'item') {
           var item = currentSelected.closest('li');
@@ -862,9 +869,9 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         break;
     }
   };
-  var callAjax = function(data) {
+  var callAjax = function (data) {
     if (Drupal.TBMegaMenu.isLockedAjax()) {
-      window.setTimeout(function() {
+      window.setTimeout(function () {
         callAjax(data);
       }, 200);
       return;
@@ -877,7 +884,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
           url: drupalSettings.TBMegaMenu.saveConfigURL,
           contentType: "application/json; charset=utf-8",
           data: JSON.stringify(data),
-          complete: function(msg) {
+          complete: function (msg) {
             var resp = $.parseJSON(msg.responseText);
             var content = resp.content ? resp.content : "";
             var close_button = $('<span class="close fa fa-times-circle" title="' + Drupal.t("Remove this block") + '">&nbsp;</span>');
@@ -885,7 +892,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
             var currentElement = $("#" + id);
             if (currentElement.length) {
               currentElement.children('.mega-inner').html("").append(close_button).append($(content)).find(':input').removeAttr('name');
-              currentElement.children('.mega-inner').children('span.close').click(function() {
+              currentElement.children('.mega-inner').children('span.close').click(function () {
                 $(this).parent().html("");
               });
             }
@@ -894,16 +901,16 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
           }
         });
         break;
-        
+
       case 'load':
         break;
-        
+
       default:
         break;
     }
   };
 
-  var defaultColumnsWidth = function(count) {
+  var defaultColumnsWidth = function (count) {
     if (count < 1) {
       return null;
     }
@@ -917,80 +924,81 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     return widths;
   };
 
-  var bindEvents = function(els) {
-    if (megamenu.data('nav_all'))
+  var bindEvents = function (els) {
+    if (megamenu.data('nav_all')) {
       megamenu.data('nav_all', megamenu.data('nav_all').add(els));
-    else
+    } else {
       megamenu.data('nav_all', els);
+    }
 
-    els.mouseover(function(event) {
+    els.mouseover(function (event) {
       megamenu.data('nav_all').removeClass('hover');
       var $this = $(this);
       clearTimeout(megamenu.attr('data-hovertimeout'));
       megamenu.attr('data-hovertimeout', setTimeout(function () {$this.addClass('hover')}, 100));
       event.stopPropagation();
     });
-    els.mouseout(function(event) {
+    els.mouseout(function (event) {
       clearTimeout(megamenu.attr('data-hovertimeout'));
       $(this).removeClass('hover');
     });
-    els.click(function(event) {
+    els.click(function (event) {
       show_toolbox($(this));
       event.stopPropagation();
       return false;
     });
   };
 
-  var unbindEvents = function(els) {
+  var unbindEvents = function (els) {
     megamenu.data('nav_all', megamenu.data('nav_all').not(els));
     els.unbind('mouseover').unbind('mouseout').unbind('click');
   };
 
-  var rebindEvents = function(els) {
+  var rebindEvents = function (els) {
     unbindEvents(els);
     bindEvents(els);
   };
 
   $.extend(Drupal.TBMegaMenu, {
-    prepare: function() {
+    prepare: function () {
       var panel = $('#jform_params_mm_type').closest('.controls');
       panel.append($('#tb-megamenu-admin').removeClass('hidden'));
       if ($('#jform_params_navigation_type').val() == 'megamenu') {
-        setTimeout(function() {
+        setTimeout(function () {
           $('#jform_params_mm_type').trigger('change.less');
         }, 500);
       } else {
-        $('#jform_params_navigation_type').bind('change', function(e) {
+        $('#jform_params_navigation_type').bind('change', function (e) {
           if ($(this).val() == 'megamenu') {
             $('#jform_params_mm_type').trigger('change.less');
           }
         });
       }
     },
-    tb_megamenu: function(form, ctrlelm, ctrl, rsp) {
+    tb_megamenu: function (form, ctrlelm, ctrl, rsp) {
       $('#tb-megamenu-admin-mm-container').html(rsp).megamenuAdmin().find(':input').removeAttr('name');
     },
-    initPanel: function() {
+    initPanel: function () {
       $('#jform_params_mm_panel').hide();
     },
-    initPreSubmit: function() {
+    initPreSubmit: function () {
       var form = document.adminForm;
       if (!form) {
         return false;
       }
 
       var onsubmit = form.onsubmit;
-      form.onsubmit = function(e) {
+      form.onsubmit = function (e) {
         $('.toolbox-saveConfig').trigger('click');
         if ($.isFunction(onsubmit)) {
           onsubmit();
         }
       };
     },
-    initRadioGroup: function() {
+    initRadioGroup: function () {
       var tb_megamenu_instance = $('.tb-megamenu-admin');
       tb_megamenu_instance.find('.radio.btn-group label').addClass('btn');
-      tb_megamenu_instance.find('.btn-group label').unbind('click').click(function() {
+      tb_megamenu_instance.find('.btn-group label').unbind('click').click(function () {
         var label = $(this), input = $('#' + label.attr('for'));
         if (!input.attr('checked')) {
           label.closest('.btn-group').find('label').removeClass('active btn-success btn-danger btn-primary');
@@ -999,7 +1007,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         }
       });
 
-      tb_megamenu_instance.find('input[type=radio]').bind('update', function() {
+      tb_megamenu_instance.find('input[type=radio]').bind('update', function () {
         if (this.checked) {
           $(this).closest('.btn-group')
                  .find('label').removeClass('active btn-success btn-danger btn-primary')
@@ -1008,7 +1016,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
         }
       });
 
-      tb_megamenu_instance.find('.btn-group input[checked=checked]').each(function() {
+      tb_megamenu_instance.find('.btn-group input[checked=checked]').each(function () {
         if ($(this).val() == '') {
           $('label[for=' + $(this).attr('id') + ']').addClass('active btn-primary');
         } else if ($(this).val() == 0) {
@@ -1020,7 +1028,7 @@ Drupal.TBMegaMenu = Drupal.TBMegaMenu || {};
     }
   });
 
-  $(window).on('load', function() {
+  $(window).on('load', function () {
     Drupal.TBMegaMenu.initPanel();
     Drupal.TBMegaMenu.initPreSubmit();
     Drupal.TBMegaMenu.initRadioGroup();
diff --git a/src/MegaMenuConfigInterface.php b/src/MegaMenuConfigInterface.php
index a6825e6..8969550 100644
--- a/src/MegaMenuConfigInterface.php
+++ b/src/MegaMenuConfigInterface.php
@@ -28,7 +28,7 @@ interface MegaMenuConfigInterface extends ConfigEntityInterface {
   /**
    * Gets the json decoded block configuration.
    *
-   * @return array|\stdClass
+   * @return array|object
    *   A class with properties for the block configuration settings.
    */
   public function getBlockConfig();
@@ -36,7 +36,7 @@ interface MegaMenuConfigInterface extends ConfigEntityInterface {
   /**
    * Converts the block config  to json and sets the blockConfig property.
    *
-   * @param array|\stdClass $blockConfig
+   * @param array|object $blockConfig
    *   The block configuration array / stdClass.
    */
   public function setBlockConfig($blockConfig);
@@ -52,7 +52,7 @@ interface MegaMenuConfigInterface extends ConfigEntityInterface {
   /**
    * Converts the menu config properties to json and sets the menu property.
    *
-   * @param array|\stdClass $menuConfig
+   * @param array|object $menuConfig
    *   The menu configuration array / stdClass.
    */
   public function setMenuConfig($menuConfig);
diff --git a/src/Plugin/Block/TBMegaMenuBlock.php b/src/Plugin/Block/TBMegaMenuBlock.php
index 14dffe9..29be8e3 100644
--- a/src/Plugin/Block/TBMegaMenuBlock.php
+++ b/src/Plugin/Block/TBMegaMenuBlock.php
@@ -22,7 +22,7 @@ use Drupal\tb_megamenu\TBMegaMenuBuilder;
 class TBMegaMenuBlock extends BlockBase {
 
   /**
-   * Current theme name;
+   * Current theme name;.
    *
    * @var string
    */
@@ -63,11 +63,12 @@ class TBMegaMenuBlock extends BlockBase {
     $rebuild_form['cache']['max_age']['#default_value'] = 0;
     return $rebuild_form;
   }
+
   /**
    * {@inheritdoc}
    */
   public function getCacheTags() {
-    // Rebuild block when menu or config changes
+    // Rebuild block when menu or config changes.
     $configName = "{$this->getDerivativeId()}__{$this->getThemeName()}";
     $cacheTags = parent::getCacheTags();
     $cacheTags[] = 'config:system.menu.' . $this->getDerivativeId();
@@ -90,10 +91,10 @@ class TBMegaMenuBlock extends BlockBase {
   }
 
   /**
-   * Get the current Theme Name
+   * Get the current Theme Name.
    *
    * @return string
-   * The current theme name.
+   *   The current theme name.
    */
   public function getThemeName() {
     if (!isset($this->themeName)) {
@@ -101,5 +102,5 @@ class TBMegaMenuBlock extends BlockBase {
     }
     return $this->themeName;
   }
-}
 
+}
diff --git a/src/TBMegaMenuBuilder.php b/src/TBMegaMenuBuilder.php
index 11cce22..8b2f82c 100644
--- a/src/TBMegaMenuBuilder.php
+++ b/src/TBMegaMenuBuilder.php
@@ -111,7 +111,7 @@ class TBMegaMenuBuilder {
    * @param string $theme
    *   The theme machine name.
    *
-   * @return array|\stdClass
+   * @return array|object
    *   The menu configuration info.
    */
   public static function getMenuConfig($menu_name, $theme) {
@@ -475,7 +475,7 @@ class TBMegaMenuBuilder {
         // Sort menu by weight.
         ksort($item_sorted);
         $new_list = [];
-        foreach($item_sorted as $weight_group) {
+        foreach ($item_sorted as $weight_group) {
           foreach ($weight_group as $item) {
             $new_list[] = $item;
           }
