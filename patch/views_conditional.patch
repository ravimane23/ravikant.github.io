diff --git a/src/Plugin/views/field/ViewsConditionalField.php b/src/Plugin/views/field/ViewsConditionalField.php
index e4f34c6..602a12a 100755
--- a/src/Plugin/views/field/ViewsConditionalField.php
+++ b/src/Plugin/views/field/ViewsConditionalField.php
@@ -1,10 +1,5 @@
 <?php
 
-/**
- * @file
- * Definition of Drupal\views_conditional\Plugin\views\field\ViewsConditionalField
- */
-
 namespace Drupal\views_conditional\Plugin\views\field;
 
 use Drupal\Core\Form\FormStateInterface;
@@ -25,20 +20,19 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryPluginInterface {
 
   /**
-   * @var DateFormatter $dateFormatter
+   * @var \Drupal\Core\Datetime\DateFormatter
    */
   protected $dateFormatter;
 
   /**
-   * @var TimeInterface $dateTime
+   * @var \Drupal\Component\Datetime\TimeInterface
    */
   protected $dateTime;
 
   /**
    * {@inheritdoc}
    */
-  public function __construct(array $configuration, $plugin_id, $plugin_definition, DateFormatter $dateFormatter, TimeInterface $dateTime)
-  {
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, DateFormatter $dateFormatter, TimeInterface $dateTime) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
     $this->dateFormatter = $dateFormatter;
     $this->dateTime = $dateTime;
@@ -47,8 +41,7 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
   /**
    * {@inheritdoc}
    */
-  public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition)
-  {
+  public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static($configuration, $plugin_id, $plugin_definition, $container->get('date.formatter'), $container->get('datetime.time'));
   }
 
@@ -59,7 +52,10 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
     // Leave empty to avoid a query on this field.
     $this->field_alias = 'views_conditional_' . $this->position;
   }
-  // Conditional operators.
+
+  /**
+   * Conditional operators.
+   */
   public $conditions = [
     1 => 'Equal to',
     2 => 'NOT equal to',
@@ -76,7 +72,8 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
   ];
 
   /**
-   * Define the available options
+   * Define the available options.
+   *
    * @return array
    */
   protected function defineOptions() {
@@ -190,9 +187,9 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
       }
       // We using there is_numeric because values '0', '0.0' counting as empty in PHP language.
       if (empty($values['options']['equalto']) && !in_array($values['options']['condition'], [
-          5,
-          6
-        ]) && !is_numeric($values['options']['equalto'])
+        5,
+        6,
+      ]) && !is_numeric($values['options']['equalto'])
       ) {
         $form_state->setErrorByName('condition', t("Please specify something to compare with."));
       }
@@ -221,7 +218,7 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
     $fields = $this->view->display_handler->getHandlers('field');
     $labels = $this->view->display_handler->getFieldLabels();
     // Search through field information for possible replacement variables.
-    foreach ( $labels as $key => $var) {
+    foreach ($labels as $key => $var) {
       // If we find a replacement variable, replace it.
       if (strpos($equalto, "{{ $key }}") !== FALSE) {
         $field = $this->clean_var($fields[$key]);
@@ -326,7 +323,7 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
         }
         break;
 
-      // Contains
+      // Contains.
       case 7:
         if (mb_stripos($r, $equalto) !== FALSE) {
           return $then;
@@ -336,7 +333,7 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
         }
         break;
 
-      // Does NOT contain
+      // Does NOT contain.
       case 8:
         if (mb_stripos($r, $equalto) === FALSE) {
           return $then;
@@ -387,4 +384,5 @@ class ViewsConditionalField extends FieldPluginBase implements ContainerFactoryP
         break;
     }
   }
+
 }
